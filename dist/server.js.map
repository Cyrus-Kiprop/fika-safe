{"version":3,"sources":["../server/server.js"],"names":["ObjectId","require","ObjectID","sourceMapSupport","install","express","bodyParser","app","use","qpm","mongodb","processQuery","autoDetect","fieldPattern","dataType","converters","objectId","json","get","req","res","db","listen","console","log"],"mappings":";;AAAA;;AAEA;;;;AADA;AAIA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,QAApC;;AAEAC,6BAAiBC,OAAjB;;AAEA,IAAMC,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,IAAMM,GAAG,GAAGF,OAAO,EAAnB,C,CAEA;;AACAE,GAAG,CAACC,GAAJ,CAAQH,OAAO,UAAP,CAAe,QAAf,CAAR;;AAGA,IAAII,GAAG,GAAGR,OAAO,CAAC,oBAAD,CAAjB;;AACA,IAAIS,OAAO,GAAGT,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAIU,YAAY,GAAGF,GAAG,CAAC;AACnBG,EAAAA,UAAU,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,MAAhB;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAAD,CADO;AAEnBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,QAAQ,EAAEN,OAAO,CAACR;AAApB;AAFO,CAAD,CAAtB;AAQAK,GAAG,CAACC,GAAJ,CAAQF,UAAU,CAACW,IAAX,EAAR,E,CACA;;AAEAV,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACH,IAAJ;AACH,CAFD;AAQA,IAAII,EAAE,GAAG,IAAT,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;;AAEAd,GAAG,CAACe,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,CAFD","sourcesContent":["import sourceMapSupport from 'source-map-support'\n// import queryString from 'query-string'\nimport { MongoClient } from 'mongodb';\n\n\nconst ObjectId = require('mongodb').ObjectID;\n\nsourceMapSupport.install()\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// an instance of express\nconst app = express();\n\n// mounting other middlewares into our server.js\napp.use(express.static('static'));\n\n\nvar qpm = require('query-params-mongo');\nvar mongodb = require('mongodb');\n\nvar processQuery = qpm({\n    autoDetect: [{ fieldPattern: /_id$/, dataType: 'objectId' }],\n    converters: { objectId: mongodb.ObjectID }\n});\n\n\n\n\napp.use(bodyParser.json());\n// OUR SERVER CODE WILL GO HEREa\n\napp.get('/', (req, res) => {\n    res.json(`this is our first server page`);\n})\n\n\n\n\n\nlet db = null;\n\n// Initialize connection once\n// MongoClient.connect(\"mongodb://localhost:27017/test\", (err, client) => {\n//     if (err) throw err;\n\n//     db = client.db('test');\n\n//     // Start the application after the database connection is ready\n//     app.listen(3000, () => {\n//         console.log(\"Listening on port 3001\")\n//     });\n\n// });\n\napp.listen(3000, () => {\n    console.log(\"Listening on port 3001\")\n});"],"file":"server.js"}